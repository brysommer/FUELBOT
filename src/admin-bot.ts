import { CallbackQuery, Message } from "node-telegram-bot-api";
import { adminBot } from "."
import { prisma } from "./lib/prisma";


const adminBotFunction = () => {
    adminBot.onText(/\/start/, async (msg: Message) => {
      const chatId = msg.chat.id;
  
      // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ—Ö –≤–æ–¥—ñ—ó–≤
      const drivers = await prisma.driver.findMany();
  
      if (!drivers.length) {
        await adminBot.sendMessage(chatId, "üö´ –í–æ–¥—ñ—ó–≤ –ø–æ–∫–∏ –Ω–µ–º–∞—î.");
        return;
      }
  
      // –§–æ—Ä–º—É—î–º–æ callback-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –Ω–æ–º–µ—Ä–∞–º–∏ –∞–≤—Ç–æ
      const keyboard = {
        reply_markup: {
          inline_keyboard: drivers.map((driver) => [
            {
              text: driver.carNumber, // –ø—Ä–∏–ø—É—Å–∫–∞—é, —â–æ —É –º–æ–¥–µ–ª—ñ —î –ø–æ–ª–µ carNumber
              callback_data: `driver_${driver.id}`,
            },
          ]),
        },
      };
  
      await adminBot.sendMessage(chatId, "üöò –û–±–µ—Ä—ñ—Ç—å –∞–≤—Ç–æ:", keyboard);
    });
  
    // –û–±—Ä–æ–±–∫–∞ callback –Ω–∞—Ç–∏—Å–∫–∞–Ω—å
    adminBot.on("callback_query", async (query: CallbackQuery) => {
      const chatId = query.message?.chat.id;
      const data = query.data;
  
      if (!chatId || !data) return;
  
      if (data.startsWith("driver_")) {
        const driverId = parseInt(data.replace("driver_", ""));
        const driver = await prisma.driver.findUnique({
          where: { id: driverId },
        });
  
        if (driver) {
          await adminBot.sendMessage(
            chatId,
            `‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏ –∞–≤—Ç–æ: ${driver.carNumber}\nüë®‚Äç‚úàÔ∏è –í–æ–¥—ñ–π: ${driver.carNumber}`
          );
        } else {
          await adminBot.sendMessage(chatId, "‚ùå –í–æ–¥—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.");
        }
      }
    });
  };

export {
    adminBotFunction
}