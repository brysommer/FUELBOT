import { writeFileSync } from "fs";
import { format } from "date-fns";
import { Parser } from "json2csv";
import { adminBot } from "."; 
import { prisma } from "./lib/prisma";
import { CallbackQuery } from "node-telegram-bot-api";



const exportcsv = async () => {
  console.log("–ü–Ü–î–ö–õ–Æ–ß–ï–ù–û")
  //—Ç—É—Ç —Ç—Ä–µ–±–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –≤ –∫–æ–ª–±–µ–∫ —Ç–∞–∫–æ–∂ —ñ–¥ –≤–æ–¥—ñ—è –¢–ó

  // –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å
  adminBot.on("callback_query", async (query: CallbackQuery) => {
    console.log('EXPORT')
    if (query.data === "export_csv") {
      const chatId = query.message?.chat.id;
      if (!chatId) return;
      console.log("EXPORT")
      // –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–ø–∏—Å–∏ —Ü—å–æ–≥–æ –≤–æ–¥—ñ—è
      const driver = await prisma.driver.findUnique({
        where: { chatId: BigInt(chatId) },
      });

      if (!driver) {
        await adminBot.sendMessage(chatId, "‚ùå –í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.");
        return;
      }

      const records = await prisma.fuelRecord.findMany({
        where: { driverId: driver.id },
        orderBy: { date: "asc" },
      });

      if (!records.length) {
        await adminBot.sendMessage(chatId, "üìÇ –î–∞–Ω–∏—Ö —â–µ –Ω–µ–º–∞—î.");
        return;
      }

      // –ì–æ—Ç—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è CSV
      const data = records.map((r) => ({
        –¥–∞—Ç–∞: format(new Date(r.date), "dd.MM.yyyy"),
        "–ü–æ—á–∞—Ç–∫–æ–≤—ñ —Å–ø—ñ–¥–æ–º–µ—Ç—Ä–∞": "-", // —Ç—Ä–µ–±–∞ –ª–æ–≥—ñ–∫—É –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏
        "–ö—ñ–Ω—Ü–µ–≤—ñ —Å–ø—ñ–¥–æ–º–µ—Ç—Ä–∞": r.odometr?.toString() ?? "-",
        –ü—Ä–æ–±—ñ–≥: "-", // –º–æ–∂–Ω–∞ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ —Ä—ñ–∑–Ω–∏—Ü—é
        "–¶—ñ–Ω–∞ –±–µ–Ω–∑–∏–Ω–∞, –≥—Ä–Ω.": r.price,
        "–í–∏—Ç—Ä–∞—Ç–∏, –≥—Ä–Ω.": r.total,
        "–í–∏—Ç—Ä–∞—Ç–∏, –ª.": r.volume,
        "–ó–∞–ø—Ä–∞–≤–ª–µ–Ω–æ, –ª.": r.volume,
        "–ë–∞–ª–∞–Ω—Å–æ–≤–∏–π –∑–∞–ª–∏—à–æ–∫, –ª.": "-", // —è–∫—â–æ —î
        "–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ —Ü—ñ–ª—ñ —Ç–∞ –∑–∞—Ö–æ–¥–∏": "",
      }));

      const parser = new Parser({ delimiter: ";" });
      const csv = parser.parse(data);

      const filePath = "./tmp/fuel_report.csv";
      writeFileSync(filePath, csv, "utf8");

      // –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ñ–∞–π–ª
      await adminBot.sendDocument(chatId, filePath, {
        caption: "üìä –í–∞—à—ñ –¥–∞–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ CSV",
      });
    }
  });

}

export {

  exportcsv

}
